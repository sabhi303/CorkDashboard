extends ../layout
include queries__subnav
include ../component/bcd-accordion-query

block append head
    link(rel='stylesheet' href='https://unpkg.com/leaflet@1.3.1/dist/leaflet.css')
    //- link(rel='stylesheet' href='https://rawgit.com/k4r573n/leaflet-control-osm-geocoder/master/Control.OSMGeocoder.css')
    //- link(rel='stylesheet' href='/stylesheets/lib/Control.OSMGeocoder.modified.css')
    link(rel='stylesheet' href='/stylesheets/components/bcd-map.css')
    link(rel='stylesheet' href='/stylesheets/components/bcd-subnav.css')
    link(rel='stylesheet' href='/stylesheets/queries/bcd-query-basic.css')
    link(rel='stylesheet' href='/stylesheets/components/bcd-accordian-query.css')
    //- link(rel='stylesheet' href='/stylesheets/lib/leaflet-chart-modified.css')  
    //- link(rel='stylesheet' href='/stylesheets/spin.css')

block navigation
    +bcd-navbar("bcd-navbar","/","Cork Dashboard", "Queries")
    +queries__subnav("subnav")
block content
    .query
        .query__grid
            .query__source 
                p Sources:
                    a(href="https://rpubs.com/burcinwalsh/620510" target="_blank")
                        | RPubs
                    a(href="https://data.cso.ie/product/c2016sr1" target="_blank")
                        | CSO
            .query__header
                +accordion({
                    id:"geodemos-header",
                    title: "<h1>Geodemographics</h1>", 
                    content: "<p> Geodemographic classification is a statistical tool that groups spatial units based on socio-economic characteristics.  This query follows the Ireland Geodemographic classification method with a focus on Cork.  Geographical Small Areas (SAs) are selected as spatial units, and variables are taken from the <a href=\"https://data.cso.ie/product/c2016sr1\" target=\"_blank\"> 2016 Census of Population results</a>. This analysis was carried out by Burcin Yazgi Walsh and is available <a href=\"https://rpubs.com/burcinwalsh/620510\" target=\"_blank\">here</a>.</p>",
                    classes: "open"
                    })

            #query-dropdown.query__dropdown-bar.dropdown 
                .query__drop-btn.dropbtn
                    p Select a group:
                    #current-group
                        p All Groups
                    svg(class="dropdown__arrow" width="7" height="12" viewBox="0 0 7 12")
                        path(fill-rule="nonzero" d="M5.569 5.994L0 .726.687 0l6.336 5.994-6.335 6.002L0 11.27z")
                #query-dropdown__content.dropdown-content
                    button(class = 'dropdown-button' type='button' data='1')
                        p Group 1
                    button(class = 'dropdown-button' type='button' data='2') 
                        p Group 2
                    button(class = 'dropdown-button' type='button' data='3') 
                        p Group 3
                    button(class = 'dropdown-button' type='button' data='4') 
                        p Group 4
                    button(class = 'dropdown-button' type='button' data='5')
                        p Group 5
                    button(class = 'dropdown-button' type='button' data='6') 
                        p Group 6
                    button(class = 'dropdown-button' type='button' data='7') 
                        p Group 7
                    button(class = 'dropdown-button' type='button' data='all') 
                        p All Groups

            .query__help
                .query__help__icon i
                div 
                    p Choose a group to be visualised on the map and value chart. The heatmap shows an overview of statistics for all groups.
            //- .query__list list
                .query__list-item item 1
                .query__list-item item 2
                .query__list-item item 3
            .query__viz
                #query-map
                    +accordion({
                        id: "accordion-map",
                        title: "<h2>Groups Map<h2>",
                        content: "", 
                        classes: "open"
                        })
                    .accordion__content.open
                        #map-geodemos
                #query-chart
                    +accordion({
                        id: "accordion-chart",
                        title: "<h2>Values Chart</h2>",
                        content: "", 
                        classes: "open"
                        })
                        .accordion__content.open
                            #chart-geodemos
            #query-group-description
                +accordion({
                    id: "accordion-group-description",
                    title: "<h2>Group Description<h2>",
                    content: "",
                    classes: "open" 
                    })
                .accordion__content.open 
                    #query-group-description__content 
                        p something where it filters by id should be here
            #query-heatmap
                +accordion({
                    id: "accordion-heatmap",
                    title:"<h2>Heatmap</h2>",
                    content: "", 
                    classes: "open"
                    })
                    .accordion__content.open
                        #query-heatmap__content
                            #query-heatmap__text
                                p cluster_text
                            #query-heatmap__chart

block append scripts
    script(type='text/javascript' src='/lib/d3v5/d3.min.js' )
    script(src="https://cdn.plot.ly/plotly-latest.min.js" type="text/javascript" )
    script(src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js")
    script(src="/lib/leaflet-osm-master/leaflet-osm.js" type="text/javascript")
    script(src="/lib/L.Control.Locate.modified.js" type="text/javascript")
    script(src="/lib/Control.OSMGeocoder.modified.js" type="text/javascript")
    //- script(src="/javascripts/charts/plotly/plotly_config_tools.js" type="text/javascript")  
    script(src="/javascripts/queries/geodemos/geodemos.js" type="module" ) 
    script(src='/javascripts/modules/accordion.js' type="text/javascript" )

    if isEditable
        script(type='text/javascript').

            //- basically ithun mla element return krayachay

            document.addEventListener('DOMContentLoaded', function() {
                var groupDescriptions = !{JSON.stringify(geodemos)};

                if (window.mainGeoDemos) {
                    window.mainGeoDemos(groupDescriptions, true);
                } else {
                    console.error('mainGeoDemos is not defined');
                }
                //- Cluster Description

            });

           function getEditablePencilIcon(editFunction, argument) {
                const argumentStr = JSON.stringify(argument)
                    .replace(/\\/g, '\\\\')  // Escape backslashes
                    .replace(/"/g, '&quot;') // Escape double quotes for HTML
                    .replace(/'/g, '&quot;')  // Escape single quotes for HTML
                    .replace(/\n/g, '\\n')   // Escape newlines
                    .replace(/\r/g, '\\r')   // Escape carriage returns
                    .replace(/\t/g, '\\t');  // Escape tabs

                const htmlSnippet = `
                    <div class="header">
                        <div class="edit-icon-wrapper" onclick="${editFunction}(JSON.parse(\`${argumentStr}\`), '/admin/queries/geodemos/edit')">
                            <img src="/images/icons/admin/pencil.svg" alt="Edit Icon">
                        </div>
                    </div>
                    <style>
                        .header {
                            display: flex;
                            align-items: center;
                            justify-content: center;
                        }

                        .edit-icon-wrapper {
                            display: flex;
                            cursor: pointer;
                            transition: transform 0.2s, color 0.2s;
                            align-items: center;
                            justify-content: center;
                        }

                        .edit-icon-wrapper:hover {
                            transform: scale(1.2);
                            color: #007BFF;
                        }
                    </style>
                `;

                return htmlSnippet;
            }



    else 
        script(type='text/javascript').
            document.addEventListener('DOMContentLoaded', function() {
                var groupDescriptions = !{JSON.stringify(geodemos)};

                if (window.mainGeoDemos) {
                    window.mainGeoDemos(groupDescriptions, false);
                } else {
                    console.error('mainGeoDemos is not defined');
                }
                //- Cluster Description

            });

    if isEditable
        script(type="module" src="/javascripts/admin/home-cards.js")
